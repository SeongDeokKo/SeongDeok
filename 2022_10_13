Individual Asset pricing Test 

스토리의 흐름은 E[MR] = 1 ,
E[Re ] = -RF * cov(M,R) 

1) 이 부호 스토리가 정확히 잘 나오는 지에 초점을 맞추었었음. 

CAPM, CCAPM , FF5, Q5 를 대상으로 진행.

Parameter Training Set 은 Size Book to Market Sorted Fama French 25 Portfolio 

결과 : CAPM 은 잘 Work 하지 않고, CCAPM 혹은 NA Measure 

같은 것들의 Relative Performance가 상대적으로 Better

2) Bucket을 나누어서 진행하는 것 

-5% ~ 5% 까지에 있어서, 각 구간에 얼마나 소속될 것인지를 예측. 

Exisiting Factor Model의 경우에 추정된 Correlation BW SDF and Individual Stock
에서 함의되는 수익률이 매우 특정 범위에 한정된 것으로 나타남. 

상대적으로 NA Measure로 진행한 것은 Implied Expected Return의 
Cross Sectional Variation 측면에서 상대적으로 더 강한 Variation을 주는 편.

두 가지로 설명이 가능할 것인데 

Individual Stock 의 해당 기간 동안 

Volatility 는 고정되어 있는 상황이기 때문에 

E[Re ] = -RF * cov(M,R) = -RF * std(R) * Corr(M,R) * std(M)

이렇게 주어진 상황에서 std(M)이 이 상황을 결정하는 것인지 혹은 

Corr(M,R)이 너무 작게 나와서 이런 상황이 나타나는 것인지를 체크해야함. 

현재 추정하는 방식은 아마도 GMM 패키지를 이용한 Hansen and Singleton 방식일 것으로 

보이기 때문에, 추정이 잘 안되는 쪽에 오히려 강한 패널티를 주는 형식이어서 

모형이 잘 추정되는 쪽에 대해서 보다 평균만을 Targetting 하는 방식일 수 있음. 

NA Measure 방식이나 LOP 방식은 상대적으로 현재에 있어서 Identity Matrix를 이용한 방식으로 

생각할 수 있는 상황이어서, 오히려 여러 Dispersion을 고려한 모형으로 생각할 수 있음.

Dispersion에 있어서 추정이 잘 되지 않는 부분에 대해서 

Dispersion이 큰 경우에 대해서도 잘 타게팅하도록 Tuning 하기 위해서는 

Spectral Decomposition을 하고 난 다음에 

내 생각에는 대각 행렬을 보강해주는 형식인 RIDGE 혹은 Lasso 방식을 조금더 차용하는게 좋을 거 같은데 

Variance가 큰 것들에 Weighting Matrix가 Proportional 하길 바라는 상황이니까 

T = Variance-Covariance Matrix of Error 라고 치면, 
T-1 가 Weigting Matrix가 될 것임. 
T = Q L Q' , L을 임의로 L-1 를 한다면, Variance가 큰 것에 대해서 큰 값으로 들어가게 됨. 

혹은 Singular Value가 낮은 것에 대해서 상쇄하게 하는 방식을 도입하는 것도 괜찮을듯 


M = a + k MRMR + s SMB + h HML 이런 식일 텐데 

개별 주식의 Covariance가 각 팩터에 대해서 작기 때문에 , Aggregate Sensitivity 가 이상하게 나오는 것인지를
혹은 Sensitivity는 큼에도 불구하고, Sum 한게 상쇄효과를 가져서 M과의 상관관계가 잘 안나오는 건지 
알아보는게 중요할 듯. 

# 아싸리 팩터들 사이의 Correlation이 없는 거라면, 해석이 좀더 편할 거 같은데 
# KNS 식의 팩터 PCA 한거를 가져다 쓰면 안되나?

## Conditional Ex-ante Risk Premium을 추정할 필요가 있고ㅓ 

## Individual Asset 이 특정 시점마다 생기고 사라지는 현상이 존재하기 때문에 

이거를 방지해주기 위해서, 100 Portfolio를 쓰든지 할 필요가 있을듯, 

Gilio and Xiu (2010,JPE) 참조하면 좋을 듯. 

BM 이나 Accounting Data를 가지고 Sorting을 좀 세밀히해서 하는 거도 방법일듯. 





